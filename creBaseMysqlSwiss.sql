-------------------------------------------------------------
-- MDB Tools - A library for reading MS Access database files
-- Copyright (C) 2000-2004 Brian Bruns
-- Files in libmdb are licensed under LGPL and the utilities under
-- the GPL, see COPYING.LIB and COPYING files respectively.
-- Check out http://mdbtools.sourceforge.net
-------------------------------------------------------------

DROP TABLE if exists ACTIVITE_COMPL;
CREATE TABLE ACTIVITE_COMPL
 (
	AC_NUM				Int primary key, 
	AC_DATE				DateTime, 
	AC_LIEU				varchar(50), 
	AC_THEME			varchar(20), 
	AC_MOTIF			varchar(100)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists COMPOSANT;
CREATE TABLE COMPOSANT
 (
	CMP_CODE			varchar(8) primary key, 
	CMP_LIBELLE			varchar(50)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists DOSAGE;
CREATE TABLE DOSAGE
 (
	DOS_CODE			varchar(20), 
	DOS_QUANTITE			varchar(20), 
	DOS_UNITE			varchar(20),
PRIMARY KEY(DOS_CODE)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists FAMILLE;
CREATE TABLE FAMILLE
 (
	FAM_CODE			varchar(6), 
	FAM_LIBELLE			varchar(160)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists FORMULER;
CREATE TABLE FORMULER
 (
	MED_DEPOTLEGAL			varchar(20), 
	PRE_CODE			varchar(4),
PRIMARY KEY(MED_DEPOTLEGAL,PRE_CODE)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists INTERAGIR;
CREATE TABLE INTERAGIR
 (
	MED_PERTURBATEUR		varchar(20), 
	MED_MED_PERTURBE		varchar(20)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists INVITER;
CREATE TABLE INVITER
 (
	AC_NUM				Int, 
	PRA_NUM				Int, 
	SPECIALISATION			Boolean,
PRIMARY KEY(AC_NUM,PRA_NUM)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists MEDICAMENT;
CREATE TABLE MEDICAMENT
 (
	MED_DEPOTLEGAL			varchar(20) primary key, 
	MED_NOMCOMMERCIAL		varchar(50), 
	FAM_CODE			varchar(6), 
	MED_COMPOSITION			text, 
	MED_EFFETS			text, 
	MED_CONTREINDIC			text, 
	MED_PRIXECHANTILLON		float
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists OFFRIR;
CREATE TABLE OFFRIR
 (
	VIS_MATRICULE			varchar(20), 
	RAP_NUM				Int, 
	PRA_NUM				Int,
	MED_DEPOTLEGAL			varchar(20), 
	OFF_QTE				Int,
	PRIMARY KEY(MED_DEPOTLEGAL,VIS_MATRICULE,RAP_NUM,PRA_NUM)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists PRATICIEN;
CREATE TABLE PRATICIEN
 (
	PRA_NUM				Int,
	PRA_CODE			varchar(6),
	PRA_NOM				varchar(50), 
	PRA_PRENOM			varchar(60), 
	PRA_ADRESSE			varchar(100), 
	PRA_CP				varchar(10), 
	PRA_VILLE			varchar(50), 
	PRA_COEFNOTORIETE		float, 
	TYP_CODE			varchar(6),
	PRIMARY KEY(PRA_CODE,PRA_NUM)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists PRESCRIRE;
CREATE TABLE PRESCRIRE
 (
	MED_DEPOTLEGAL			varchar(20), 
	TIN_CODE			varchar(10), 
	DOS_CODE			varchar(20), 
	PRE_POSOLOGIE			varchar(80),
	PRIMARY KEY(MED_DEPOTLEGAL,TIN_CODE,DOS_CODE)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists PRESENTATION;
CREATE TABLE PRESENTATION
 (
	MED_DEPOTLEGAL 			varchar(80),
	PRE_CODE			varchar(4), 
	PRE_LIBELLE			varchar(40),
PRIMARY KEY(MED_DEPOTLEGAL)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists RAPPORT_VISITE;
CREATE TABLE RAPPORT_VISITE
 (
	VIS_MATRICULE			varchar(20), 
	RAP_NUM				Int, 
	PRA_NUM				Int, 
	RAP_DATE			DateTime, 
	RAP_BILAN			text, 
	RAP_MOTIF			text,
	PRIMARY KEY(RAP_NUM,VIS_MATRICULE,PRA_NUM)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists REALISER;
CREATE TABLE REALISER
 (
	AC_NUM				Int, 
	VIS_MATRICULE			varchar(20), 
	REA_MTTFRAIS			float,
PRIMARY KEY(AC_NUM,VIS_MATRICULE)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists SECTEUR;
CREATE TABLE SECTEUR
 (
	SEC_CODE			varchar(2) primary key, 
	SEC_LIBELLE			varchar(30)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists SPECIALITE;
CREATE TABLE SPECIALITE
 (
	SPE_CODE			varchar(10)Primary key, 
	SPE_LIBELLE			varchar(300)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists Switchboard_Items;
CREATE TABLE Switchboard_Items
 (
	SwitchboardID			Int, 
	ItemNumber			Int, 
	ItemText			varchar(510), 
	Command				Int, 
	Argument			varchar(510)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists TYPE_INDIVIDU;
CREATE TABLE TYPE_INDIVIDU
 (
	TIN_CODE			varchar(10), 
	TIN_LIBELLE			varchar(100),
PRIMARY KEY(TIN_CODE)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists TYPE_PRATICIEN;
CREATE TABLE TYPE_PRATICIEN
 (
	TYP_CODE			varchar(6) primary key, 
	TYP_LIBELLE			varchar(50), 
	TYP_LIEU			varchar(70)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists VISITEUR;
CREATE TABLE VISITEUR
 (
	VIS_MATRICULE			varchar(20) primary key, 
	VIS_NOM				varchar(50), 
	VIS_PRENOM			varchar(100), 
	VIS_ADRESSE			varchar(100), 
	VIS_CP				varchar(10), 
	VIS_VILLE			varchar(60), 
	VIS_DATEEMBAUCHE		DateTime, 
	SEC_CODE			varchar(2), 
	LAB_CODE			varchar(4),
	DEP_CODE			varchar(3)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists CONSTITUER;
CREATE TABLE CONSTITUER
 (
	MED_DEPOTLEGAL			varchar(20), 
	CMP_CODE			varchar(8), 
	CST_QTE				float,
PRIMARY KEY(MED_DEPOTLEGAL,CMP_CODE)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists LABO;
CREATE TABLE LABO
 (
	LAB_CODE			varchar(4) primary key, 
	LAB_NOM				varchar(20), 
	LAB_CHEFVENTE			varchar(40)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists POSSEDER;
CREATE TABLE POSSEDER
 (
	PRA_NUM				varchar(6), 
	SPE_CODE			varchar(10), 
	POS_DIPLOME			varchar(20), 
	POS_COEFPRESCRIPTION		float,
PRIMARY KEY(PRA_NUM,SPE_CODE)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists REGION;
CREATE TABLE REGION
 (
	REG_CODE			varchar(4), 
	SEC_CODE			varchar(2), 
	REG_NOM				varchar(100),
	primary key(REG_CODE)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists TRAVAILLER;
CREATE TABLE TRAVAILLER
 (
	VIS_MATRICULE			varchar(20), 
	JJMMAA				DateTime, 
	REG_CODE			varchar(4), 
	TRA_ROLE			varchar(22),
	PRIMARY KEY(VIS_MATRICULE,JJMMAA,REG_CODE)
)engine=innodb;
-- CREATE ANY INDEXES ...

DROP TABLE if exists DEPARTEMENT;
CREATE TABLE DEPARTEMENT
 (
	DEP_CODE			varchar(3),
	DEP_NOM				varchar(30),
	DEP_CHEFVENTE			varchar(20)
	PRIMARY KEY(DEP_CODE)
)engine=innodb;
-- CREATE ANY INDEXES ...


-- CREATE ANY Relationships ...

-- relationships are not supported for access


-- --------------------|REGION|--------------------

ALTER TABLE REGION
ADD CONSTRAINT FK_REGION_SECTEUR
FOREIGN KEY (SEC_CODE) REFERENCES SECTEUR (SEC_CODE);


-- -------------------|TRAVAILLER|----------------------

ALTER TABLE TRAVAILLER
ADD CONSTRAINT FK_TRAVAILLER_VISITEUR
FOREIGN KEY (VIS_MATRICULE) REFERENCES VISITEUR (VIS_MATRICULE);

ALTER TABLE TRAVAILLER
ADD CONSTRAINT FK_TRAVAILLER_REGION
FOREIGN KEY (REG_CODE) REFERENCES REGION (REG_CODE);


-- -------------------|VISITEUR|----------------------

ALTER TABLE VISITEUR
ADD CONSTRAINT FK_VISITEUR_DEPARTEMENT
FOREIGN KEY (DEP_CODE) REFERENCES DEPARTEMENT (DEP_CODE);

ALTER TABLE VISITEUR
ADD CONSTRAINT FK_VISITEUR_SECTEUR
FOREIGN KEY (SEC_CODE) REFERENCES SECTEUR (SEC_CODE);

ALTER TABLE VISITEUR
ADD CONSTRAINT FK_VISITEUR_LABO
FOREIGN KEY (LAB_CODE) REFERENCES LABO (LAB_CODE);


-- -------------------|OFFRIR|----------------------

ALTER TABLE OFFRIR
ADD CONSTRAINT FK_OFFRIR_MEDICAMENT
FOREIGN KEY (MED_DEPOTLEGAL) REFERENCES MEDICAMENT(MED_DEPOTLEGAL);

ALTER TABLE OFFRIR
ADD CONSTRAINT FK_OFFRIR_RAPPORT_VISITEUR
FOREIGN KEY (VIS_MATRICULE,RAP_NUM,PRA_NUM) REFERENCES RAPPORT_VISITE (VIS_MATRICULE,RAP_NUM,PRA_NUM);


-- -------------------|RAPPORT VISITE|----------------------

ALTER TABLE RAPPORT_VISITE
ADD CONSTRAINT FK_RAPPORT_VISITE_PRATITIEN
FOREIGN KEY (PRA_NUM) REFERENCES PRATICIEN (PRA_NUM);

ALTER TABLE RAPPORT_VISITE
ADD CONSTRAINT FK_RAPPORT_VISITE_VISITEUR
FOREIGN KEY (VIS_MATRICULE) REFERENCES VISITEUR (VIS_MATRICULE);


-- -------------------|PRESCRIRE|-------------------

ALTER TABLE PRESCRIRE
ADD CONSTRAINT FK_PRESCRIRE_MEDICAMENT
FOREIGN KEY (MED_DEPOTLEGAL) REFERENCES MEDICAMENT (MED_DEPOTLEGAL);

ALTER TABLE PRESCRIRE
ADD CONSTRAINT FK_PRESCRIRE_TYPE_INDIVIDU
FOREIGN KEY (TIN_CODE) REFERENCES TYPE_INDIVIDU (TIN_CODE);

ALTER TABLE PRESCRIRE
ADD CONSTRAINT FK_PRESCRIRE_DOSAGE
FOREIGN KEY (DOS_CODE) REFERENCES DOSAGE (DOS_CODE);


-- -------------------|MEDICAMENT|-------------------

ALTER TABLE MEDICAMENT
ADD CONSTRAINT FK_MEDICAMENT_FAMILLE
FOREIGN KEY (FAM_CODE) REFERENCES FAMILLE (FAM_CODE);


-- -------------------|FORMULER|-------------------

ALTER TABLE FORMULER
ADD CONSTRAINT FK_FORMULER_MEDICAMENT
FOREIGN KEY (MED_DEPOTLEGAL) REFERENCES MEDICAMENT (MED_DEPOTLEGAL);

ALTER TABLE FORMULER
ADD CONSTRAINT FK_FORMULER_PRESENTATION
FOREIGN KEY (PRE_CODE) REFERENCES PRESENTATION (PRE_CODE);


-- -------------------|PRATICIEN|-------------------

ALTER TABLE PRATICIEN
ADD CONSTRAINT FK_PRATICIEN_TYPE_PRATICIEN
FOREIGN KEY (PRA_CODE) REFERENCES TYPE_PRATICIEN (TYP_CODE);


-- -------------------|POSSEDER|-------------------

ALTER TABLE POSSEDER
ADD CONSTRAINT FK_POSSEDER_PRATICIEN
FOREIGN KEY (PRA_NUM) REFERENCES PRATICIEN (PRA_NUM);

ALTER TABLE POSSEDER
ADD CONSTRAINT FK_POSSEDER_SPECIALITE
FOREIGN KEY (SPE_CODE) REFERENCES SPECIALITE (SPE_CODE);


-- -------------------|INVITER|-------------------

ALTER TABLE INVITER
ADD CONSTRAINT FK_INVITER_PRATICIEN
FOREIGN KEY (PRA_NUM) REFERENCES PRATICIEN (PRA_NUM);

ALTER TABLE INVITER
ADD CONSTRAINT FK_INVITER_ACTIVITE_COMPL
FOREIGN KEY (AC_NUM) REFERENCES ACTIVITE_COMPL (AC_NUM);


-- -------------------|REALISER|-------------------

ALTER TABLE REALISER
ADD CONSTRAINT FK_REALISER_VISITEUR
FOREIGN KEY (VIS_MATRICULE) REFERENCES VISITEUR (VIS_MATRICULE);

ALTER TABLE REALISER
ADD CONSTRAINT FK_REALISER_ACTIVITE_COMPL
FOREIGN KEY (AC_NUM) REFERENCES ACTIVITE_COMPL (AC_NUM);


-- -------------------|CONSTITUER|-------------------

ALTER TABLE CONSTITUER
ADD CONSTRAINT FK_CONSTITUER_MEDICAMENT
FOREIGN KEY (MED_DEPOTLEGAL) REFERENCES MEDICAMENT (MED_DEPOTLEGAL);

ALTER TABLE CONSTITUER
ADD CONSTRAINT FK_CONSTITUER_COMPOSANT
FOREIGN KEY (CMP_CODE) REFERENCES COMPOSANT (CMP_CODE);


-- -------------------|INTERAGIR|-------------------

ALTER TABLE INTERAGIR
ADD CONSTRAINT FK_INTERAGIR_MEDICAMENT_PERTURBATEUR
FOREIGN KEY (MED_PERTURBATEUR) REFERENCES MEDICAMENT (MED_DEPOTLEGAL);

ALTER TABLE INTERAGIR
ADD CONSTRAINT FK_INTERAGIR_MEDICAMENT_PERTURBE
FOREIGN KEY (MED_MED_PERTURBE) REFERENCES MEDICAMENT (MED_DEPOTLEGAL);
